#!/bin/bash

install_path=/data/idcm/versions/4.0.0
yml_file=/etc/ansible/roles/idcm_upgrade.yml

net_code_name(){
if [[ $pass3_job == adminsite ]]
then 
    import_name="IDCM.AdminSite"
elif [[ $pass3_job == c2capi ]]
then
    import_name="IDCM.WebApiC2C"
elif [[ $pass3_job == c2cscheduler ]]
then
    import_name="IDCM.Host.C2CScheduler"
elif [[ $pass3_job == "internal.api" ]]
then
    import_name="IDCM.InternalSystemApi"
elif [[ $pass3_job == "internal.scheduler" ]]
then
    import_name="IDCM.Host.InternalSystemScheduler"
elif [[ $pass3_job == "matchengine" ]]
then
    import_name="IDCM.Host.MatchEngine"
elif [[ $pass3_job == persistence ]]
then
    import_name="IDCM.Persistence.SyncData"
elif [[ $pass3_job == "promotion.server" ]]
then
    import_name="IDCM.PromotionServer"
elif [[ $pass3_job == "quotes" ]]
then
    import_name="IDCM.Host.QuoteStatistic"
elif [[ $pass3_job == "scheduler" ]]
then
    import_name="IDCM.Host.Scheduler"
elif [[ $pass3_job == "websocket.api" ]]
then
    import_name="IDCM.Host.WebSocketAPI"
elif [[ $pass3_job == "webapi" ]]
then
    import_name="IDCM.WebApiNotServer"
elif [[ $pass3_job == "webapimining" ]]
then
    import_name="IDCM.WebApiMining"
elif [[ $pass3_job == "hostmining" ]]
then
    import_name="IDCM.Host.Mining"
elif [[ $pass3_job == "webapi.promotion" ]]
then
    import_name="IDCM.WebApiPromotion"
elif [[ $pass3_job == "websocket.ssl" ]]
then
    import_name="IDCM.Host.WebSocketAPI"
elif [[ $pass3_job == "webapi.alliance" ]]
then
    import_name="IDCM.WebApiAlliance"
elif [[ $pass3_job == "kline.persistence" ]]
then
    import_name="IDCM.Host.KLinePersistence"
elif [[ $pass3_job == "webapi.maintain" ]]
then
    import_name="IDCM.WebAPIMaintain"
elif [[ $pass3_job == "webapi.external" ]]
then
    import_name="IDCM.WebApiExternal"
elif [[ $pass3_job == "webapi.pokerblock" ]]
then
    import_name="IDCM.WebApiPokerBlock"
elif [[ $pass3_job == "flexpusher" ]]
then
    import_name="IDCM.Host.FlexPusher"
else
    echo "JOB名称不匹配! 退出操作..."
    exit
fi
}

Create_file(){

if [[ ! -d "$install_path/$pass2_set/$pass3_job-$pass2_set" ]]
then
    echo "创建文件夹 $pass3_job-$pass2_set "
    mkdir -p $install_path/$pass2_set/$pass3_job-$pass2_set
fi         
}

del_code(){

count='ls $install_path/$pass2_set/$pass3_job-$pass2_set |wc -w'

if [[ $count > 0 ]] 
then
    echo "删除旧版本 $pass3_job-$pass2_set ..."
    cd $install_path/$pass2_set/$pass3_job-$pass2_set && rm -rf *  
fi

}


run(){

#判断传入参数不能为空
if [[ $1 != "" ]] && [[ $2 != "" ]] && [[ $3 != "" ]]
then
    pass1_host=$1
    pass2_set=$2
    pass3_job=$3
    pass4=$4
else
    echo "没有传入参数！退出操作..."
    exit
fi

echo ""
#匹配名称
net_code_name
#创建文件夹
Create_file
#删除旧版本
del_code
#复制新版本
echo "代码库复制 $import_name ... "
rsync -qzrtopg --delete --progress --exclude=Configs $install_path/$pass2_set/netcore/NetCore/$import_name/ $install_path/$pass2_set/$pass3_job-$pass2_set/
sleep 3
#复制新版本到节点
echo "发布新版本 $pass3_job-$pass2_set ..."
ansible-playbook -s $yml_file --extra-vars "job=$pass3_job set=$pass2_set host=$pass1_host project=$pass4"
}

run $1 $2 $3
